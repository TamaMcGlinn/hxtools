#!/usr/bin/perl -w
#
#	pmap_dirty
#	written by Jan Engelhardt <jengelh [at] medozas de>, 2006 - 2007
#	http://jengelh.medozas.de/
#	released in the Public Domain
#
# Usage: pmap_dirty [pid...]
#
# Ex: pmap_dirty
#	 pmap_dirty $$
#	 pmap_dirty `pidof init` `pidof java`
#
use Getopt::Long;
use strict;

my $Use_du_style;
&Getopt::Long::Configure(qw(bundling));
&GetOptions("s" => \$Use_du_style);

my $total_private_dirty = 0;

if (scalar(@ARGV) == 0) {
	@ARGV = sort { $a <=> $b } map {
		$_ = ($_ =~ m{^/proc/(\d+)$})[0];
		(!defined($_) || $_ eq "") ? () : $_
	} glob("/proc/*");
}

foreach my $pid (@ARGV) {
	my $proc_name;
	my $fh;
	open($fh, "< /proc/$pid/smaps");

	my $private_dirty = 0;
	my $shared_dirty = 0;
	while (defined(my $line = <$fh>)) {
		if ($line =~ /^Private_Dirty:\s+(\d+)/i) {
			$private_dirty += $1;
		} elsif ($line =~ /^Shared_Dirty:\s+(\d+)/i) {
			$shared_dirty += $1;
		}
	}

	close $fh;
	if (open($fh, "</proc/$pid/stat")) {
		($proc_name) = (<$fh> =~ /^.*?\((.*)\)/);
		close $fh;
	}

	&print_one("$pid($proc_name)", $private_dirty, $shared_dirty);
	$total_private_dirty += $private_dirty;
}

&print_one("Total", $total_private_dirty);

sub print_one
{
	my($text, $private_size, $shared_size) = @_;

	if (defined($shared_size)) {
		$private_size .= "K";
		$shared_size  .= "K";
		if ($Use_du_style) {
			printf "%-10s\t%s (shared: %s)", $private_size, $text, $shared_size;
		} else {
			print "$text: $private_size ($shared_size)\n";
		}
	} else {
		$private_size .= "K";
		if ($Use_du_style) {
			printf "%-10s\t%s", $private_size, $text;
		} else {
			print "$text: $private_size\n";
		}
	}
}
