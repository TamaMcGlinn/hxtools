# -*- cooleditsyntax -*-

context default
	# QBasic
	keyword whole $DYNAMIC white
	keyword whole $INCLUDE white
	keyword whole $STATIC white
	keyword whole Absolute white
	keyword whole AND white
	keyword whole ANY white
	keyword whole AS white
	keyword whole CALL white
	keyword whole CASE white
	keyword whole CDECL white
	keyword whole COMMAND$ white
	keyword whole COMMON white
	keyword whole CONST white
	keyword whole DATA white
	keyword whole DECLARE white
	keyword whole DEF white
	keyword whole DEFCUR white
	keyword whole DEFDBL white
	keyword whole DEFINT white
	keyword whole DEFLNG white
	keyword whole DEFSNG white
	keyword whole DEFSTR white
	keyword whole DIM white
	keyword whole DOUBLE white
	keyword whole DO white
	keyword whole ELSEIF white
	keyword whole ELSE white
	keyword whole END white
	keyword whole ENVIRON$ white
	keyword whole EXIT white
	keyword whole FOR white
	keyword whole FUNCTION white
	keyword whole GOSUB white
	keyword whole GOTO white
	keyword whole IF white
	keyword whole INTEGER white
	keyword whole INTERRUPT white
	keyword whole IS white
	keyword whole LONG white
	keyword whole LOOP white
	keyword whole NEXT white
	keyword whole NOT white
	keyword whole ON white
	keyword whole OR white
	keyword whole PUBLIC white
	keyword whole RESUME white
	keyword whole RETURN white
	keyword whole SELECT white
	keyword whole SHARED white
	keyword whole SINGLE white
	keyword whole STATIC white
	keyword whole STEP white
	keyword whole STRING white
	keyword whole SUB white
	keyword whole THEN white
	keyword whole TO white
	keyword whole TYPE white
	keyword whole UNTIL white
	keyword whole WEND white
	keyword whole WHILE white
	keyword whole XOR white

	# VB
	keyword whole And white
	keyword whole As white
	keyword whole Attribute white
	keyword whole Boolean white
	keyword whole ByVal white
	keyword whole Byte white
	keyword whole Call white
	keyword whole Case white
	keyword whole Dim white
	keyword whole Do white
	keyword whole Else white
	keyword whole ElseIf white
	keyword whole End white
	keyword whole Enum white
	keyword whole Exit white
	keyword whole For white
	keyword whole Function white
	keyword whole GoTo white
	keyword whole If white
	keyword whole Integer white
	keyword whole Is white
	keyword whole Long white
	keyword whole Loop white
	keyword whole New white
	keyword whole Next white
	keyword whole Not white
	keyword whole Nothing white
	keyword whole Null white
	keyword whole On\sError white
	keyword whole Option white
	keyword whole Optional white
	keyword whole Or white
	keyword whole Private white
	keyword whole Public white
	keyword whole ReDim white
	keyword whole Resume white
	keyword whole Select white
	keyword whole Set white
	keyword whole Step white
	keyword whole String white
	keyword whole Sub white
	keyword whole Then white
	keyword whole To white
	keyword whole Until white
	keyword whole Variant white
	keyword whole With white

	# QBasic
	keyword wholeright &H+ cyan

	keyword ^ white
	keyword ( brightcyan
	keyword ) brightcyan
	keyword [ brightcyan
	keyword ] brightcyan
	keyword { brightcyan
	keyword } brightcyan
	keyword ; brightcyan
	keyword , brightcyan
	keyword : brightmagenta
	keyword < white
	keyword > white
	keyword = white
	keyword \+ white
	keyword - white
	keyword / white
	keyword \* white
	keyword <> white
	keyword \\ white
	keyword #\{0123456789\} white
	keyword & white

context linestart REM \n yellow
	spellcheck

context linestart ' \n yellow
	spellcheck

context ' \n yellow
	spellcheck

context " " green
