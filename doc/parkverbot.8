.TH parkverbot 8 "2011-12-28" "hxtools" "hxtools"
.SH Name
parkverbot \(em daemon to inhibit hard disk head parking
.SH Synopsis
\fBparkverbot\fP [\fB\-r\fP \fIkbytes\fP] [\fB\-t\fP \fIsecs\fP]
\fIdevice\fP...
.SH Introduction
.PP
Modern rotational hard disks have a misfeature involving the regular automatic
unloading of the heads, measurable by the S.M.A.R.T. attribute no. 225
"Load_Cycle_Count", that causes latency on wake-up, and while the manufacturers
sell this as "green"/ecophil, it is believed to cause reduced hard disk life.
.PP
It is also not reliably deactivatable. hdparm -B is most of the time
ineffective, not to mention that hdparm does not work with SCSI/SAS disks, and
using a DOS utility disk just is not realistic. (In short, you suck, dear
manufacturers.)
.SH Description
.PP
The "parkverbot" daemon will issue small read requests periodically to a random
location on disk in an effort to reset the inactivity timer in the hardware and
so prevent the dreaded head unloading.
.PP
The current algorithms are not fully proof; the statistical success/failure
rate in a laptop scenario has been observed to be 0.4 unloads/day.
.PP
parkverbot obsoletes the earlier "thkd" package.
.PP
The name stems from German and indicates parking prohibition (you probably
already guessed that), or more commonly known as a "no parking" zone.
.SH Options
.PP
.TP
\fB\-b\fP \fIsize\fP
The size of a read request, in kilobytes (defaults to 64 KB).
.TP
\fB\-r\fP \fIsize\fP
The guard window size (defaults to 16 MB). When requesting a block off the
disk, the hardware might choose to cache more parts, as it will have to hover
and wait over a particular track for the desired sector. If the next random
block we choose happens to be already cached because of that, the head unload
timer will not be reset. To avoid this, if the new random location falls within
\fIsize\fP kilobytes, we shuffle out a new location and retry.
.TP
\fB\-t\fP \fIsecs\fP
The interval in which to request blocks (defaults to 4 sec).
.SH See also
.PP
\fBhxtools\fP(7)
